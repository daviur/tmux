##############################
#
# | |_ _ __ ___  _   ___  __
# | __| '_ ` _ \| | | \ \/ /
# | |_| | | | | | |_| |>  <
#  \__|_| |_| |_|\__,_/_/\_\
#
#############################

############################################################################
############################################################################
# Reset Prefix
############################################################################
set -g prefix C-a
bind-key a send-prefix # for nested tmux sessions

############################################################################
# Global options
############################################################################
# large history
set-option -g history-limit 30000

# colors
set-window-option -g mode-bg black
set-option -g default-terminal "screen-256color"
set-option -g pane-active-border-fg green

# basic settings
set-window-option -g xterm-keys on # for vim
set-window-option -g mode-keys vi # vi key
set-window-option -g monitor-activity on
set-window-option -g window-status-current-fg white
set-window-option -g window-status-current-attr reverse
set-window-option -g mode-style 'bg=white fg=black'

# Automatically set window title
set-window-option -g automatic-rename

# set -g terminal-overrides 'xterm*:smcup@:rmcup@'

# vi movement keys
# set-option -g status-keys vi

############################################################################
# Status Bar
############################################################################
#set-option -g status-utf8 on
set-option -g status-justify right
set-option -g status-interval 5
set-option -g status-left-length 30
set-option -g status-right-length 100
set-option -g status-left '#[fg=colour219]» #[fg=colour81,bold]#T#[default]'
set-option -g status-right '#[fg=colour81]»» #[fg=colour43,bold]###S #[fg=colour219]%R %m-%d#(acpi | cut -d ',' -f 2)#[default]'
set-option -g visual-activity on

TMUX_GITBAR_DIR="$HOME/.tmux/plugins/tmux-gitbar"
TMGB_STATUS_STRING="#{git_branch} - #{git_upstream} - #{git_remote} #{git_flags}"
source-file "$HOME/.tmux/plugins/tmux-gitbar/tmux-gitbar.tmux"

# Titles (window number, program name, active (or not)
set-option -g set-titles on
set-option -g set-titles-string '#H:#S.#I.#P #W #T'


############################################################################
# Unbindings
############################################################################
#unbind [ # copy mode bound to escape key
unbind j
unbind C-b # unbind default leader key
unbind '"' # unbind horizontal split
unbind %   # unbind vertical split

############################################################################
# Bindings
############################################################################
# reload tmux conf
bind-key r source-file ~/.tmux.conf

#bind Escape copy-mode

# new split in current pane (horizontal / vertical)
bind-key _ split-window -v # split pane horizontally
bind-key | split-window -h # split pane vertically

# list panes
# bind-key Space list-panes

# break-pane
bind-key Enter break-pane

# join-pane [-dhv] [-l size | -p percentage] [-s src-pane]
# [-t:dst-window.dst-pane] (destination window (dot) destination pane
#                (alias: joinp)
#
#bind C-j command-prompt "joinp"
#bind C-j command-prompt "join-pane"
#bind-key j command-prompt "join-pane -s '%%'"
#bind-key j command-prompt "joinp -t:0"
bind-key Space command-prompt "joinp -t:%%" # %% = prompt for window.pane [-V|H] # vert|hor split

#previous pane
bind-key -n C-up prev
bind-key -n C-left prev

#next pane
bind-key -n C-right next
bind-key -n C-down next

############################################################################
# windows
############################################################################
set-window-option -g window-status-current-bg black
set-window-option -g window-status-current-fg colour11
bind-key C-a last-window # C-a C-a for last active window
# By default, all windows in a session are constrained to the size of the
# smallest client connected to that session,
# even if both clients are looking at different windows.
# It seems that in this particular case, Screen has the better default
# where a window is only constrained in size if a smaller client
# is actively looking at it.
set-window-option -g aggressive-resize on

############################################################################
# panes
############################################################################
# Navigation ---------------------------------------------------------------
# Use the vim motion keys to move between panes
# Customizing plugin vim-tmux-navigator

is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
  | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"

is_fzf="ps -o state= -o comm= -t '#{pane_tty}' \
  | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?fzf$'"

bind -n C-h run "($is_vim && tmux send-keys C-h) || \
                 tmux select-pane -L"

bind -n C-j run "($is_vim && tmux send-keys C-j) || \
                 ($is_fzf && tmux send-keys C-j) || \
                 tmux select-pane -D"

bind -n C-k run "($is_vim && tmux send-keys C-k) || \
                 ($is_fzf && tmux send-keys C-k) || \
                 tmux select-pane -U"

bind -n C-l run "($is_vim && tmux send-keys C-l) || \
                 tmux select-pane -R"

bind-key -n C-\ if-shell "$is_vim" "send-keys C-\\" "select-pane -l"

# Resizing ---------------------------------------------------------------
bind-key C-h resize-pane -L
bind-key C-j resize-pane -D
bind-key C-k resize-pane -U
bind-key C-l resize-pane -R

############################################################################
# layouts
############################################################################
bind o select-layout "active-only"
bind M-- select-layout "even-vertical"
bind M-| select-layout "even-horizontal"
bind M-r rotate-window

# Init development layout
bind D source-file ~/.tmux/cdev

############################################################################
# Colours (Solarized dark)
############################################################################

# default statusbar colors
set-option -g status-bg black #base02
set-option -g status-fg yellow #yellow
set-option -g status-attr default

## default window title colors
set-window-option -g window-status-fg brightblue #base0
set-window-option -g window-status-bg default
#set-window-option -g window-status-attr dim

## active window title colors
set-window-option -g window-status-current-fg brightred #orange
set-window-option -g window-status-current-bg default
#set-window-option -g window-status-current-attr bright

## pane border
set-option -g pane-border-fg black #base02
set-option -g pane-active-border-fg brightgreen #base01

## message text
set-option -g message-bg black #base02
set-option -g message-fg brightred #orange

## pane number display
set-option -g display-panes-active-colour blue #blue
set-option -g display-panes-colour brightred #orange

## clock
set-window-option -g clock-mode-colour green #green

############################################################################
# Plugins
############################################################################

# List of plugins
set -g @plugin 'tmux-plugins/tpm'
# set -g @plugin 'christoomey/vim-tmux-navigator'
set -g @plugin 'tmux-plugins/tmux-copycat'
set -g @plugin 'tmux-plugins/tmux-yank'

# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
run -b '~/.tmux/plugins/tpm/tpm'
